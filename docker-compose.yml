services: # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: goaltracker-postgres
    environment:
      POSTGRES_DB: goaltracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Removed seed data auto-loading - will handle this in backend initialization
    networks:
      - goaltracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: goaltracker-backend
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres123
      - DB_NAME=goaltracker
      - JWT_SECRET=your_super_secret_jwt_key_for_production_please_change_this
      - JWT_EXPIRES_IN=30d
      - PORT=3001
      - CORS_ORIGINS=http://localhost:4200,https://goal-tracker.ahmadalasiri.info
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - goaltracker-network
    # Removed volume mounts - they were overriding the build artifacts    restart: unless-stopped # No frontend service needed as it's deployed on Vercel

volumes:
  postgres_data:
    driver: local

networks:
  goaltracker-network:
    driver: bridge
